name: CI/CD to EC2 via Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 설정 (Docker 빌드용)
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      # 3. Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew build -x test

      # 4. Docker 로그인 (Docker Hub 사용 시)
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Docker 이미지 빌드 & push
      - name: Build and push Docker image
        run: |
          IMAGE_NAME=my-dockerhub-username/my-spring-app:latest
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      # 6. EC2에 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          script: |
            IMAGE_NAME=my-dockerhub-username/my-spring-app:latest
            docker stop my-spring-app || true
            docker rm my-spring-app || true
            docker pull $IMAGE_NAME
            docker run -d --name my-spring-app -p 8080:8080 $IMAGE_NAME
